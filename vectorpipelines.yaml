# ### Fluentd
# apiVersion: observability.kaasops.io/v1alpha1
# kind: VectorPipeline
# metadata:
#   name: fluentd
#   namespace: vector-operator-system
# spec:
#   sources:
#     fluentd:
#       type: "kubernetes_logs"
#       extra_label_selector: "app.kubernetes.io/component=fluentd"
#       extra_namespace_label_selector: "kubernetes.io/metadata.name=logging"
#   transforms:
#     fluentd-transform:
#       type: "remap"
#       inputs:
#         - fluentd
#       source: |
#         .@timestamp = del(.timestamp)

#         .cluster = "lux"
#   sinks:
#     elastic:
#       type: "elasticsearch"
#       inputs:
#         - fluentd-transform
#       endpoint: "https://ams-kube-log.xbet.lan:9260"
#       bulk:
#         index: "vector-fluentd-%Y-%m-%d"
#       auth:
#         user: for_services
#         password: oodoo8EiL]o]sh9aQuie
#         strategy: basic
#       tls:
#         verify_certificate: false
# ---
### Ingress
apiVersion: observability.kaasops.io/v1alpha1
kind: VectorPipeline
metadata:
  name: ingress
  namespace: ingress-nginx
spec:
  sources:
    ingress:
      type: "kubernetes_logs"
      extra_label_selector: "app.kubernetes.io/name=ingress-nginx"
      extra_namespace_label_selector: "kubernetes.io/metadata.name=ingress-nginx"
  transforms:
    ingress-transform:
      type: "remap"
      inputs:
        - ingress
      source: |
        res, errjson = parse_json(.message)
        if errjson != null {
          res, errregex = parse_regex(.message, r'^(?P<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<loglevel>[\w]+.)\] (?P<pid>\d+)\#(?P<worker_id>\d+): (?P<message>.*), client: (?P<client>.*), server: (?P<server>.*), request: "(?P<request>.*)", host: "(?P<host>.*)"$')
          if errregex != null {
            abort
          } else {
            . = res
          }
        } else {
          . = res
        }

        .ts, err = parse_timestamp(.time, "%d/%b/%Y:%H:%M:%S %z")
        if err != null {
          .ts = parse_timestamp!(.time, "%Y/%m/%d %H:%M:%S")
        }
        .@timestamp = del(.ts)

        .pid = to_int!(.pid)
        .worker_id = to_int!(.worker_id)

        .cluster = "lux"
  sinks:
    elastic:
      type: "elasticsearch"
      inputs:
        - ingress-transform
      endpoint: "https://ams-kube-log.xbet.lan:9260"
      bulk:
        index: "ingress-lux-%Y-%m-%d"
      auth:
        user: for_services
        password: oodoo8EiL]o]sh9aQuie
        strategy: basic
      tls:
        verify_certificate: false
---
# #test
apiVersion: observability.kaasops.io/v1alpha1
kind: ClusterVectorPipeline
metadata:
  name: test
  namespace: vector
spec:
  sources:
    test:
      type: "kubernetes_logs"
      extra_namespace_label_selector: "kubernetes.io/metadata.name=webproject-njs-frontend-1177"
  transforms:
    test-transform:
      type: "remap"
      inputs:
        - test
      source: |
        .@timestamp = del(.timestamp)

        .cluster = "lux"
  sinks:
    elastic:
      type: "elasticsearch"
      inputs:
        - test-transform
      endpoint: "https://ams-kube-log.xbet.lan:9260"
      bulk:
        index: "vector-test-%Y-%m-%d"
      auth:
        user: for_services
        password: oodoo8EiL]o]sh9aQuie
        strategy: basic
      tls:
        verify_certificate: false
# #Failed
---
apiVersion: observability.kaasops.io/v1alpha1
kind: VectorPipeline
metadata:
  name: vectorpipeline-sample
  namespace: vector
spec:
  sources:
    test1:
      type: "kubernetes_logs1"
      extra_label_selector: "app!=testdeployment"
  transforms:
    test:
      type: "filter"
      inputs:
        - test1
      condition:
        type: "vrl"
        source: ".status != 200"
  sinks:
    test2:
      type: "console"
      encoding:
        codec: "json"
      inputs:
        - test1
# ---
# apiVersion: observability.kaasops.io/v1alpha1
# kind: VectorPipeline
# metadata:
#   name: vectorpipeline-sample1
#   namespace: kube-system
# spec:
#   source:
#     test1:
#       type: "kubernetes_logs"
#       extra_label_selector: "app!=testdeployment2"
#   sinks:
#     test2:
#       type: "console"
#       encoding:
#         codec: "json"
#       inputs:
#         - test1
# ---
# apiVersion: observability.kaasops.io/v1alpha1
# kind: VectorPipeline
# metadata:
#   name: vectorpipeline-sample2
#   namespace: default
# spec:
#   source:
#     labelSelector:
#       app: "testdeployment2"
#   sinks:
#     type: "console"
# ---
# apiVersion: observability.kaasops.io/v1alpha1
# kind: VectorPipeline
# metadata:
#   name: vectorpipeline-sample3
#   namespace: default
# spec:
#   source:
#     labelSelector:
#       app: "testdeployment2"
#   sinks:
#     type: "console"